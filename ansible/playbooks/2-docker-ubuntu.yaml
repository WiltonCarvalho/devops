- hosts: 127.0.0.1
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
    docker_compose_version: '1.29.2'
  handlers:
    - name: 'restart rsyslog'
      service:
        name: rsyslog
        state: restarted
    - name: 'restart docker'
      service:
        name: docker
        state: restarted
    - name: 'update grub'
      shell: >
        update-grub
  tasks:
    - name: '/etc/default/grub.d/99-cgroup.cfg'
      copy:
        dest: "/etc/default/grub.d/99-cgroup.cfg"
        content: |
          GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX cgroup_enable=memory swapaccount=1"
        mode: 0644
        owner: root
        group: root
      notify: update grub

    - name: 'install packages'
      apt:
        name: "{{ packages }}"
        update_cache: no
      vars:
        packages:
        - docker.io
        - linux-virtual-hwe-20.04

    - name: 'adding user docker-user to group docker'
      user:
        name: docker-user
        shell: /bin/bash
        groups: docker
        append: yes

    - name: '/etc/docker/certs.d'
      file: 
        path: "/etc/docker/certs.d"
        state: directory

    - name: 'docker ca check'
      shell: test -f /etc/docker/certs.d/ca.pem
      register: ca_check
      failed_when: ca_check.rc > 1
      changed_when: ca_check.rc > 0

    - name: 'docker ca'
      shell: |
        cd /etc/docker/certs.d
        openssl genrsa -out ca-key.pem 2048
        openssl req -x509 -new -nodes -key ca-key.pem -days 36500 \
        -out ca.pem -sha256 -subj '/O=Docker/CN=docker ca'
        openssl genrsa -out server-key.pem 2048
        openssl req -new -key server-key.pem -out server.csr -subj '/O=Docker/CN=localhost'
        echo "extendedKeyUsage = clientAuth, serverAuth, 1.3.6.1.5.5.8.2.2" > /tmp/san.txt
        echo "subjectAltName=IP:$(ip route get 1.1.1.1 | grep -oP 'src \K\S+'),IP:127.0.0.1,DNS:localhost,DNS:*.example.com" >> /tmp/san.txt
        openssl x509 -req -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -days 36500 \
        -out server-cert.pem -sha256 -extfile /tmp/san.txt
        mkdir client && cd client
        openssl genrsa -out key.pem 2048
        openssl req -subj '/CN=client' -new -key key.pem -out client.csr
        echo extendedKeyUsage = clientAuth > /tmp/client.cnf
        openssl x509 -req -days 36500 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial \
        -out cert.pem -extfile /tmp/client.cnf
      when: ca_check.rc > 0

    - name: '/etc/docker/daemon.json'
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {% raw %}
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "journald",
            "log-opts": {
              "tag": "{{.DaemonName}}.{{.ImageName}}"
            },
            "storage-driver": "overlay2",
            "live-restore": false,
            "metrics-addr": "0.0.0.0:9323",
            "tlscacert": "/etc/docker/certs.d/ca.pem",
            "tlscert": "/etc/docker/certs.d/server-cert.pem",
            "tlskey": "/etc/docker/certs.d/server-key.pem",
            "tlsverify": true,
            "host": "0.0.0.0:2376"
          }
          {% endraw %}
        mode: 0644
        owner: root
        group: root
      notify: restart docker

    - name: 'Add rsyslog 20-docker.conf'
      copy:
        dest: "/etc/rsyslog.d/20-docker.conf"
        content: |
          $template CUSTOM_LOGS,"/var/log/docker/%programname%.log"
          if $syslogtag startswith 'docker' then ?CUSTOM_LOGS
          & stop
        mode: 0644
        owner: root
        group: root
      notify: restart rsyslog

    - name: 'Add /etc/logrotate.d/docker'
      copy:
        dest: "/etc/logrotate.d/docker"
        content: |
          /var/log/docker/*.log
          {
            rotate 10
            size 10M
            missingok
            notifempty
            compress
            delaycompress
            sharedscripts
            postrotate
              /usr/lib/rsyslog/rsyslog-rotate
            endscript
          }
        mode: 0644
        owner: root
        group: root

    - name: 'docker-compose checksum'
      shell: >
        curl -fsSL https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64.sha256 | awk '{print $1}'
      args:
        warn: false
      register: docker_compose_checksum

    # - name: 'docker-compose checksum stdout'
    #   debug:
    #     msg: "{{ docker_compose_checksum.stdout }}"

    - name: 'Docker Compose'
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        #checksum: sha256:https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64.sha256
        checksum: sha256:{{ docker_compose_checksum.stdout }}
        dest: /usr/local/bin/docker-compose
        mode: 0755
        owner: root
        group: root

    - name: 'docker-compose version'
      shell: >
        docker version && docker-compose version
      args:
        warn: false
      register: docker_compose_version

    - name: 'docker-compose version stdout'
      debug:
        msg: "{{ docker_compose_version.stdout_lines }}"
