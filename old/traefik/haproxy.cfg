# HAPROXY SOCKET SIDECAR
#docker run -it --rm --net=host -v /var/run/docker.sock:/var/run/docker.sock:ro haproxy
#haproxy -db -f /usr/local/etc/haproxy/haproxy.cfg

global
log stdout format raw local0
defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 10m
    timeout server 10m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

backend dockerbackend
    server dockersocket /var/run/docker.sock
    mode http

frontend dockerfrontend
    bind :2375
    mode http

    http-request deny unless METH_GET
    http-request allow if { path /v1.24/version }
    http-request allow if { path /v1.24/events }
    http-request allow if { path /v1.24/containers/json }
    http-request allow if { path /v1.24/containers/[a-zA-Z0-9_.-]+/json }
    http-request allow if { path /v1.24/services }
    http-request allow if { path /v1.24/networks }
    http-request allow if { path /v1.24/tasks }
    http-request deny

    default_backend dockerbackend

#curl http://localhost:2375/version
#curl http://localhost:2375/containers/json
#curl -POST -d '{"Image":"nginx:stable"}' -H 'Content-Type: application/json' http://localhost/containers/create

#curl -XPOST --unix-socket /var/run/docker.sock -d '{"Image":"nginx:stable"}' -H 'Content-Type: application/json' http://localhost/containers/create
#{"Id":"86a4f6855c7c601f2f13dccfd3be75321848185a063d070d58c5c34558a961cf","Warnings":[]}
#curl -XPOST --unix-socket /var/run/docker.sock http://localhost/containers/86a4f6855c7c601f2f13dccfd3be75321848185a063d070d58c5c34558a961cf/start

#DOCKER_API_VERSION=1.24
#DOCKER_HOST=tcp://tasks.haproxy:2375/