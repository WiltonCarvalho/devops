#https://www.indivar.nz/blog/how-to-setup-traefik-portainer-on-ubuntu1804/
version: "3.8"
services:
  haproxy:
    image: "haproxy"
    hostname: haproxy:lts
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        failure_action: rollback
      restart_policy:
        condition: unless-stopped
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      traefik: {}
    configs:
      - source: haproxy_conf_v1
        target: /usr/local/etc/haproxy/haproxy.cfg
  traefik:
    image: "traefik:v2.2"
    hostname: traefik
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.example.com`)"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.docker.network=traefik"
      placement:
        constraints:
          - node.role == manager
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      #- "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.endpoint=tcp://tasks.haproxy:2375"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.swarmMode=true"
      - "--providers.file.directory=/etc/traefik"
      #- "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      #- "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      #- target: 8080
      #  published: 8080
      #  mode: host
    #volumes:
    #  - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      traefik: {}
    configs:
      - source: dynamic_conf
        target: /etc/traefik/dynamic_conf.yaml
    secrets:
      - source: example-com_crt
        target: /etc/certs/example.com.crt
        mode: 0400
      - source: example-com_key
        target: /etc/certs/example.com.key
        mode: 0400
configs:
  dynamic_conf:
    file: $PWD/dynamic_conf.yaml
  haproxy_conf_v1:
    file: $PWD/haproxy.cfg
networks:
  traefik:
    external: true
    name: traefik
secrets:
  example-com_crt:
    file: ${HOME}/certs/example.com.crt
  example-com_key:
    file: ${HOME}/certs/example.com.key

