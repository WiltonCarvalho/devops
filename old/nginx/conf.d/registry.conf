upstream registry {
    server nexus:5000;
}
map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
}
server {
    listen 80;
    server_name  registry.example.com;
    # SSL
    # openssl genrsa -out conf.d/example.key
    # openssl req -new -key conf.d/example.key -out conf.d/example.csr -subj '/O=Example/CN=*.example.com' -addext "subjectAltName=IP:127.0.0.1,DNS:example.com,DNS:*.example.com"
    # echo "subjectAltName=IP:127.0.0.1,DNS:example.com,DNS:*.example.com" > /tmp/san.txt
    # openssl x509 -req -days 36500 -in conf.d/example.csr -signkey conf.d/example.key -out conf.d/example.pem -extfile /tmp/san.txt
    listen 443 ssl;
    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }
    ssl_certificate /etc/nginx/conf.d/example.pem;
    ssl_certificate_key /etc/nginx/conf.d/example.key;
    ssl_protocols TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    chunked_transfer_encoding on;

    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
    }
    # To add basic authentication to v2 use auth_basic setting.
    # docker run --rm --entrypoint htpasswd httpd:alpine -Bbn testuser testpassword > auth/nginx.htpasswd
    # auth_basic "Registry realm";
    # auth_basic_user_file /etc/nginx/conf.d/nginx.htpasswd;
    ## If $docker_distribution_api_version is empty, the header is not added.
    ## See the map directive above where this variable is defined.
    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
    location /v2/ {
        proxy_pass http://registry;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    error_page 401 403 404 @40x;
    location @40x {
        default_type text/html;
        return 404 "<html>\n<head><title>Not Found!</title></head>\n<body>\n<center><h1>Not Found!</h1></center>\n</body>\n</html>\n";
    }
    error_page 500 502 503 504 @50x;
    location @50x {
        default_type text/html;
        return 500 "<html>\n<head><title>Internal Server Error!</title></head>\n<body>\n<center><h1>Internal Server Error!</h1></center>\n</body>\n</html>\n";
    }
}